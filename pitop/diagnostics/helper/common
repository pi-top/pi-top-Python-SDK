ctr=1
journal_lines=10000
no_color='\033[0m'
root_dirname="pt-diagnostics"
working_parent_dir="/tmp"
working_dir="$working_parent_dir/$root_dirname"
output_file="/tmp/pt-diagnostics.zip"
output_file_encrypted="$output_file.gpg"

increment_ctr ()
{
	ctr=$((ctr+1))
}

print_line ()
{
	printf "$1\n"
}
export -f print_line

print_line_green ()
{
	green='\033[1;32m'
	printf "${green}$1${no_color}\n"
}
export -f print_line_green

print_line_red ()
{
	red='\033[1;31m'
	printf "${red}$1${no_color}\n"
}
export -f print_line_red

print_line_yellow ()
{
	grey='\033[1;33m'
	printf "${grey}$1${no_color}\n"
}
export -f print_line_yellow

print_line_blue ()
{
	blue='\033[1;34m'
	printf "${blue}$1${no_color}\n"
}
export -f print_line_blue

new_line() {
    print_line ""
}
export -f new_line

get_raspi_config_settings ()
{
	print_line_yellow "      â”” $1"
	result=$(raspi-config nonint $1)
	if [[ -z "$2" ]]; then
		echo "$1: $result"
	else
		echo "$1: $result" >> "$2"
	fi
}
export -f get_raspi_config_settings

is_int() {
  [ "$val" -eq "$val" ] 2>/dev/null
  valid=$?
  if [ $valid -eq 0 ]; then
    return 0
  else
    return 1
  fi
}
export -f is_int

starts_with_prefix() {
  local text=$1
  local prefix=$2

  if [[ "$text" == "$prefix"* ]]; then
    return 0
  else
    return 1
  fi
}
export -f starts_with_prefix

print_error() {
  print_line_red "$1"
  exit 1
}
export -f print_error
