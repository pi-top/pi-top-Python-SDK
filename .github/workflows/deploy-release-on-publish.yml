name: Deploy Published Release

on:
  push:
    branches: [ "ci-test-publish-release-*" ]
  release:
    types: [published]

jobs:
  add-stable-tag:
    runs-on: ubuntu-20.04
    steps:
      - name: Get latest release's version
        id: release_version
        run: |
          sudo apt-get install -y curl jq wget

          TAG_NAME=$(curl -s ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/latest | jq -r ".tag_name")
          echo "::set-output name=version::$TAG_NAME"

      - name: Tag release commit as 'stable' for ReadTheDocs
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "stable"
          message: "Stable release"
          commit_sha: ${{ steps.release_version.outputs.version }}
          force_push_tag: true

  publish-release:
    runs-on: ubuntu-20.04
    steps:
      - name: Download latest release's assets
        run: |
          sudo apt-get install -y curl jq wget
          curl -s ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/latest | jq -r ".assets | .[] | .browser_download_url" | xargs -n1 wget

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Publish to TestPyPI
        if: github.event_name != 'release' || github.event.action != 'published'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --repository testpypi --verbose *.whl

      - name: Publish to PyPI
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --verbose *.whl

      # TODO: publish to apt repository
