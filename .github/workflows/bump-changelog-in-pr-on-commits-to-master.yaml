name: Create/Update Changelog PR on Commits to 'master'

on:
  push:
    branches: [ "master" ]

jobs:
  create-pr:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.2.0
        with:
          fetch-depth: 0

      - name: Patch changelog (release)
        run: |
          docker run --rm \
            --volume ${{ github.workspace }}:/src \
            -e RELEASE=1 \
            pitop/gbp-dch-gen:latest

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          branch: ${{ secrets.CI_CHANGELOG_BUMP_BRANCH }}
          commit-message: Bump debian/changelog with proposed change for next release
          title: "[CI] Update debian/changelog for next release"
          body: |
            Proposal for next version's changelog, automatically updated on each push to master.

            ### Release Process
            - [ ] Modify the changelog as necessary (e.g. amend version, tidy format)
            - [ ] Mark as ready for review
            - [ ] Squash and merge, leaving commit message unchanged

            ### What Happens Next?
            This will trigger a workflow that [prepares a GitHub Release](../tree/master/.github/workflows/tag-and-draft-release-on-changelog-pr-merge.yml) by tagging the released version in the changelog and creating a draft release.
            Publishing this Release will trigger the [release deployment](../tree/master/.github/workflows/deploy-release-on-publish.yml) workflow, that uploads to public release repositories, etc.

            Note: tests will not run on this branch until a user acts upon this PR/branch. Close the PR and reopen to trigger tests.
            See [here](https://github.com/peter-evans/create-pull-request/blob/master/docs/concepts-guidelines.md#triggering-further-workflow-runs) for more info.
          draft: true
          labels: "ci"
