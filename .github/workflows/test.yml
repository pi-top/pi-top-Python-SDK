name: Test

on: push

jobs:
  test-python-linting:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint code
        uses: ricardochaves/python-lint@v1.3.0
        with:
          python-root-list: "pitop pitopcli"
          use-flake8: true
          extra-flake8-options: "--max-line-length=150"

          use-pylint: false
          # extra-pylint-options: ""

          use-pycodestyle: false
          # extra-pycodestyle-options: ""

          use-black: false
          # extra-black-options: ""

          use-mypy: false
          # extra-mypy-options: ""

          use-isort: false
          # extra-isort-options: ""

  test-python-pytest:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7" # as on pi, because PyV4L2Camera errors on 3.9

      - name: Install pip
        run: |
          python -m pip install --upgrade pip

      # Installing pitopcommon from source as it is not yet published to PyPi
      - name: Checkout pitopcommon
        uses: actions/checkout@v2
        with:
          repository: pi-top/pi-top-Python-Common-Library
          path: pi-top-Python-Common-Library

      - name: Install pitopcommon
        run: |
          pip install ./pi-top-Python-Common-Library

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: main

      - name: Install dependencies
        run: |
          sudo apt-get install libv4l-dev # for building PyV4L2Camera
          pip install "./main[test]"

      - name: Run pytest
        run: |
          python -m pytest main

  test-readme-render:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install readme-renderer

      - name: Test README
        run: |
          python -m readme_renderer README.rst -o /tmp/README.html

  # test-docs:
      # PYTHONPATH=. sphinx-build -W -v -bhtml docs/ build/html

  test-debian-package:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Debian package
        uses: pi-top/action-debian-package@v0.2.0
        with:
          source_directory: "./"
          artifacts_directory: "./artifacts"

          docker_image: "pitop/deb-build:latest"
          distribution: "buster-backports"
          target_architecture: "amd64"  # Use host architecture for testing build quality

          lintian_opts: "--dont-check-part nmu --no-tag-display-limit --display-info --show-overrides --fail-on error --fail-on warning --fail-on info"
          # Package uses latest packaging syntax and Lintian opts/tags
          dpkg_buildpackage_opts: "--no-sign --no-check-builddeps --post-clean"
