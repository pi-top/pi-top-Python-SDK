name: Deploy Published Release

on:
  push:
    branches: [ "ci-test-publish-release-*" ]
  release:
    types: [published]

jobs:
  publish-release:
    runs-on: ubuntu-20.04
    steps:
      - name: Download and extract latest release
        run: |
          sudo apt-get install -y curl jq

          zipball_url="$(curl -s ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/latest | jq -r ".zipball_url")"
          tag_name="$(curl -s ${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/releases/latest | jq -r ".tag_name")"

          curl -L ${zipball_url} --output "${tag_name}.zip"
          unzip "${tag_name}.zip"
          rm "${tag_name}.zip"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Publish to TestPyPI
        if: github.event_name != 'release' || github.event.action != 'published'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --repository testpypi --verbose *.whl

      - name: Publish to PyPI
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --verbose *.whl

      # TODO: publish to apt repository
