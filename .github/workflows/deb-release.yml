name: Create GitHub Release

on:
  workflow_dispatch:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [closed]


env:
  DEB_BUILD_DOCKER_IMAGE: "pitop/pi-top-os-deb-build"
  DEB_BUILD_DOCKER_TAG: "latest"
  PACKAGECLOUD_REPO: "pi-top-os-unstable"
  OS: "debian"
  DISTRO: "bullseye"

jobs:
  release:
    runs-on: ubuntu-20.04
    if: github.event_name == 'workflow_dispatch' || (github.event.pull_request.merged && github.head_ref == 'bump-changelog')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Get latest semver tag and latest version in changelog
        run: |
          set -x

          sudo apt install -y --no-install-recommends dpkg-dev npm
          npm install -g git-latest-semver-tag

          latest_tag=$(git-latest-semver-tag)
          changelog_version=$(dpkg-parsechangelog -Sversion)

          echo "LATEST_TAG=${latest_tag#v}" >> $GITHUB_ENV
          echo "CURRENT_VERSION=${changelog_version}" >> $GITHUB_ENV

      - name: Confirm version is higher than last tagged version
        if: ${{ env.LATEST_TAG != '' }}
        run: dpkg --compare-versions ${{ env.CURRENT_VERSION }} gt ${{ env.LATEST_TAG }}

      - name: Determine architecture to use from package info
        # If architecture is 'all', then it can be compiled on host architecture
        # All other pi-topOS cases require 'armhf'
        run: |
          target_architecture=amd64
          if grep '^Architecture:' debian/control | grep -q -v 'all'; then
            target_architecture=armhf
          fi
          echo "TARGET_ARCHITECTURE=${target_architecture}" >> $GITHUB_ENV

      - name: Build Debian package
        uses: pi-top/debian-package-build-action@master
        with:
          target_architecture: ${{ env.TARGET_ARCHITECTURE }}
          docker_image: ${{ env.DEB_BUILD_DOCKER_IMAGE }}:${{ env.DEB_BUILD_DOCKER_TAG }}
          signing_key: ${{ secrets.DEB_SIGNING_GPG_KEY }}
          signing_passphrase: ${{ secrets.DEB_SIGNING_GPG_PASSPHRASE }}
          build_directory: ./artifacts
          # Optional, repo-specific build environment variables
          additional_env: |
            DATA="${{ secrets.DATA }}"
            TLS_KEY="${{ secrets.TLS_KEY }}"
            PYTHON_PACKAGE_VERSION="${{ env.CURRENT_VERSION }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "dsc"
          path: "./artifacts"

      - uses: pi-top/ghaction-packagecloud@main
        with:
          repository: ${{ env.PACKAGECLOUD_REPO }}/${{ env.OS }}/${{ env.DISTRO }}
          files: |
            ./artifacts/*.dsc
            ./artifacts/*.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.CURRENT_VERSION }}"
          name: "v${{ env.CURRENT_VERSION }}"
          draft: false
          prerelease: false
          files: ./artifacts/*
          token: ${{ secrets.PAT_GITHUB }}
